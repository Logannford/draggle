generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum planType {
  FREE
  BASIC
  PREMIUM
}

enum ComponentType {
  text
  timestamp
  div
}

// defines the user data model
model users {
  uid                                         String @id @default(uuid())
  email                                       String @unique
  hasAuthenticatedEmail                       Boolean @default(false) // if the user has authenticated their email
  firstName                                   String?
  lastName                                    String?

  subscription                                subscription?

  createdAt                                   DateTime @default(now())
  updatedAt                                   DateTime @updatedAt
  lastLogin                                   DateTime?
  websites                                    websites[]
}

model subscription {
  transactionId                               String @id @unique // Define transactionId as primary key
  subscriptionActive                          Boolean
  paymentEmail                                String
  planType                                    planType
  dateOfPurchase                              DateTime  
  dateOfExpiry                                DateTime   

  user                                        users      @relation(fields: [userId], references: [uid])
  userId                                      String     @unique

  numOfWebsites                               Int
}

model websites {
  owner                                       users         @relation(fields: [userId], references: [uid])
  userId                                      String

  websiteId                                   String        @id @default(uuid())
  websiteName                                 String        
  websiteUrl                                  String        
  websiteLogo                                 String

  websitePrimaryColor                         String 
  websiteSecondaryColor                       String
  websiteBackgroundColor                      String        @default("#ffffff")

  hasBeenPublished                            Boolean       @default(false)

  createdAt                                   DateTime      @default(now())
  lastUpdated                                 DateTime      @updatedAt
  lastUpdatedUid                              String        @default("")

  canvas                                      Canvas? 
}

model earlyAccess {
  email                                      String @id 
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @updatedAt
}

model Components {
  type                                        ComponentType @id
  name                                        String
  description                                 String
  properties                                  String[]
  createdAt                                   DateTime @default(now())
  updatedAt                                   DateTime @updatedAt
  
  data                                        Json
}

model Canvas {
  website                                     websites      @relation(fields: [websiteId], references: [websiteId])
  websiteId                                   String        @unique

  canvasId                                    String        @id @default(uuid())
  createdAt                                   DateTime      @default(now())
  updatedAt                                   DateTime      @updatedAt

  page                                        Page[]
}

model Page {
  canvas                                      Canvas        @relation(fields: [canvasId], references: [canvasId])
  canvasId                                    String

  pageId                                      String        @id @default(uuid())
  pageTitle                                   String
  pageSlug                                    String

  pagePrimaryColor                            String         
  pageSecondaryColor                          String
  pageBackgroundColor                         String        @default("#ffffff")

  createdAt                                   DateTime      @default(now())
  updatedAt                                   DateTime      @updatedAt
}
